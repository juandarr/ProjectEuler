"""
Finds the biggest product of n consecutive digits from a string of numbers
Author: Juan Rios
"""
import math

d = "731671765313306249192251196744265747423553491949349698352031277450"\
    "6326239578318016984801869478851843858615607891129494954595017379583"\
    "3195285320880551112540698747158523863050715693290963295227443043557"\
    "6689664895044524452316173185640309871112172238311362229893423380308"\
    "1353362766142828064444866452387493035890729629049156044077239071381"\
    "0515859307960866701724271218839987979087922749219016997208880937766"\
    "5727333001053367881220235421809751254540594752243525849077116705560"\
    "1360483958644670632441572215539753697817977846174064955149290862569"\
    "3219784686224828397224137565705605749026140797296865241453510047482"\
    "1663704844031998900088952434506585412275886668811642717147992444292"\
    "8230863465674813919123162824586178664583591245665294765456828489128"\
    "8314260769004224219022671055626321111109370544217506941658960408071"\
    "9840385096245544436298123098787992724428490918884580156166097919133"\
    "8754992005240636899125607176060588611646710940507754100225698315520"\
    "005593572972571636269561882670428252483600823257530420752963450"

# Finds the biggest product of n consecutive digits
def biggest_product(number, n):
    max_number = 0
    index = 0
    while (index < len(number)-n+1):
        num = 1
        for digit in number[index:index+n]:
            num *= int(digit)
        if max_number < num:
            max_number = num
        index += 1
    return max_number

if __name__ == "__main__":
    n = 13
    print('The biggest product of {0} consecutive digits from the string is {1}'.format(n, biggest_product(d,n)))